<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: $ -->

<refentry xml:id="zbarcodeimage.read" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ZBarCodeImage::read</refname>
  <refpurpose>Read an image</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>ZBarCodeImage</type><methodname>ZBarCodeImage::read</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>enhance</parameter></methodparam>
  </methodsynopsis>
  <para>
   Read an image into the ZBarCodeImage object. The object can hold multiple images
   at the same time. This is convenient with for example multi-page PDF files.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Filename of an image to read.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>enhance</parameter></term>
     <listitem>
      <para>
       Bitmask of <constant>ZBarCode::OPT_*</constant> constants.
       Usually specifying <constant>ZBarCode::OPT_RESOLUTION</constant> improves results with PDFs.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the current object on success and throws ZBarCodeException on failure.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><methodname>ZBarCodeImage::read</methodname> example</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Create new image object */
$pages = new ZBarCodeImage();

/* Read in multiple images */
$pages->read("test1.jpg")
      ->read("test2.jpg")
      ->read("test3.jpg");

/* Create scanner */
$scanner = new ZBarCodeScanner();

/* Read the second page, test2.jpg */
var_dump($scanner->scan($pages, 2));
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
array(1) {
  [0]=>
  array(2) {
    ["data"]=>
    string(13) "5901234123457"
    ["type"]=>
    string(6) "EAN-13"
  }
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>ZBarCodeScanner::scan</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
