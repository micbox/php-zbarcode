<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: $ -->

<refentry xml:id="zbarcodescanner.scan" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ZBarCodeScanner::scan</refname>
  <refpurpose>Scan image object</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>ZBarCodeScanner::scan</methodname>
   <methodparam><type>mixed</type><parameter>image</parameter></methodparam>
   <methodparam choice="opt"><type>integer</type><parameter>page_num</parameter></methodparam>
   <methodparam choice="opt"><type>boolean</type><parameter>extended_info</parameter></methodparam>
  </methodsynopsis>
  <para>
   Scans image object for barcodes and returns an <type>array</type> representing barcodes
   found on the page.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>image</parameter></term>
     <listitem>
      <para>
       Image object to scan for barcodes. This parameter can be one of the following: ZBarCodeImage object,
       Imagick object or GD resource. Imagick and GD support has to be enabled separately during installation.
       Imagick support requires Imagick 2.3.1 or newer.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>page_num</parameter></term>
     <listitem>
      <para>
       The page to scan. Pass 0 for all pages. (Default: 1)
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>extended_info</parameter></term>
     <listitem>
      <para>
       If &true; location polygon of each barcode is returned within the <type>array</type>. (Default: &false;)
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns an array describing the barcodes or an empty array if no barcodes were found. On successfull execution the 
   <type>array</type> will contain elements 'data' and 'type'. If <parameter>extended_info</parameter> is &true; the array will 
   contain 'location' element which is an an array of coordinates for the bounding polygon of the barcode.
   'quality' element is available with ZBar 0.9 and higher.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><methodname>ZBarCodeScanner::scan</methodname> single page reading</title>
    <programlisting role="php">
<![CDATA[
<?php
$image = new ZBarcodeImage();
$image->read("ean13.jpg");

$scanner = new ZBarcodeScanner();
var_dump($scanner->scan($image));
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
array(1) {
  [0]=>
  array(2) {
    ["data"]=>
    string(13) "5901234123457"
    ["type"]=>
    string(6) "EAN-13"
  }
}
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><methodname>ZBarCodeScanner::scan</methodname> multi-page reading</title>
    <programlisting role="php">
<![CDATA[
<?php
$image = new ZBarcodeImage();
$image->read("invoice.pdf");

$scanner = new ZBarcodeScanner();
var_dump($scanner->scan($image, 0));
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
array(2) {
  [1]=>
  array(1) {
    [0]=>
    array(2) {
      ["data"]=>
      string(13) "5901234123457"
      ["type"]=>
      string(6) "EAN-13"
    }
    [1]=>
    array(2) {
      ["data"]=>
      string(13) "5901234123457"
      ["type"]=>
      string(6) "EAN-13"
    }
  }
  [2]=>
  array(1) {
    [0]=>
    array(2) {
      ["data"]=>
      string(13) "5901234123457"
      ["type"]=>
      string(6) "EAN-13"
    }
  }
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
